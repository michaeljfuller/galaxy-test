{"version":3,"sources":["screens/ProfileScreen/sections/GeneralProfileSection.module.scss","screens/ProfileScreen/sections/ApiProfileSection.module.scss","components/navigation/NavBar/NavBar.module.scss","navigation/SideNavigator/SideNavigator.module.scss","screens/LogInScreen/LogInScreenForm.module.scss","components/decoration/ScienceBackground/ScienceBackground.module.css","components/ui/PopUnder/PopUnder.module.scss","components/navigation/NavBar/LatestNotificationsList.module.scss","screens/LogInScreen/LogInScreen.module.scss","screens/core/ScreenWrapper.module.scss","components/ui/Badge/Badge.module.scss","App.module.scss","hooks/useStore.ts","hooks/useUser.ts","navigation/AuthenticatedRoute.tsx","utils/component-utils.ts","components/decoration/ScienceBackground.tsx","screens/LogInScreen/LogInForm.tsx","store/user/user-slice.ts","store/user/user-actions.ts","screens/LogInScreen.tsx","navigation/SideNavigator.tsx","screens/ProfileScreen/sections/GeneralProfileSection.tsx","screens/ProfileScreen/sections/ApiProfileSection.tsx","components/icons/InnerGridIcon.tsx","utils/error-utils.ts","components/ui/Badge.tsx","hooks/useNotifications.ts","components/ui/PopUnder.tsx","components/navigation/NavBar/LatestNotificationsList.tsx","components/navigation/NavBar.tsx","screens/core/ScreenWrapper.tsx","screens/ProfileScreen.tsx","store/notifications/notifications-slice.ts","store/notifications/notifications-actions.ts","screens/NotificationsScreen.tsx","App.tsx","store/user/user-saga.ts","store/notifications/notifications-saga.ts","store/sagas.ts","utils/mock-utils.ts","services/auth/MockVolatileAuth.ts","services/notifications/NotificationsApi.ts","store/sagaContexts.ts","store/index.ts","AppWrapper.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useStoreSelector","useSelector","useStoreDispatch","useDispatch","useUser","expected","state","user","current","AuthenticatedRoute","component","children","redirectTo","pushRedirect","props","to","push","styles","Object","assign","classNames","filter","Boolean","join","ScienceBackground","className","style","css","root","defaultScienceBackgroundStyle","underlay","image","src","alt","freeze","height","width","Math","floor","LogInForm","disabled","useState","email","setEmail","password","setPassword","handleSubmit","event","a","preventDefault","onSubmit","type","required","value","onChange","target","placeholder","error","signUp","initialState","undefined","signingIn","signingOut","createSlice","name","reducers","signIn","action","signingInAs","payload","signInError","signOut","signOutError","setUser","slice","actions","LogInScreen","dispatch","signedIn","processing","useEffect","history","formContainer","minWidth","SideNavigator","memo","withRouter","fullPath","location","pathname","side","links","map","link","match","url","path","active","title","content","replace","routeProps","displayName","GeneralProfileSection","currentUser","submitDisabled","JSON","stringify","handleFirstName","useCallback","givenName","handleLastName","familyName","handleEmail","handlePhone","phone","subtitle","row","avatar","secondary","delete","submit","ApiProfileSection","keyInput","useRef","copied","setCopied","token","timeoutId","setTimeout","clearTimeout","key","checkWrapper","ref","readOnly","ghost","onClick","select","document","execCommand","getSelection","empty","blur","ghostSecondary","InnerGridIcon","color","rounding","min","xmlns","squareSize","rx","fill","x","y","offsetX","offsetY","errorMessage","fallback","Error","message","Badge","containerClassName","containerStyle","hidden","badge","useNotifications","notifications","PopUnder","open","background","onClose","popUnder","React","createElement","LatestNotificationsList","latest","fetchingLatest","fetchLatestError","list","notification","id","read","length","seeAll","NavBar","unreadCount","n","openNotifications","setOpenNotifications","handleToggleNotifications","alert","menu","ScreenWrapper","navBar","ProfileScreen","exact","fetchLatest","setLatest","NotificationsScreen","params","App","userId","fetchLatestNotifications","from","signInWorker","signOutWorker","userSaga","getContext","api","call","put","takeLatest","fetchLatestWorker","notificationsSaga","rootSaga","all","fork","wait","ms","Promise","resolve","createUser","split","random","toString","pop","MockVolatileAuth","options","fetchUserDelay","signInDelay","signOutDelay","signUpDelay","this","NotificationsApi","endpoint","latestLength","offset","limit","filters","order","fetch","then","response","json","fetchNotifications","sagaContexts","auth","sagaMiddleware","createSagaMiddleware","context","index","configureStore","reducer","middleware","getDefaultMiddleware","devTools","run","AppWrapper","StrictMode","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9cd2d883.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GeneralProfileSection_root__1_ct5\",\"title\":\"GeneralProfileSection_title__VeBBF\",\"subtitle\":\"GeneralProfileSection_subtitle__3Z5tI\",\"row\":\"GeneralProfileSection_row__kIRMD\",\"avatar\":\"GeneralProfileSection_avatar__2jIhU\",\"delete\":\"GeneralProfileSection_delete__7YXZf\",\"secondary\":\"GeneralProfileSection_secondary__XnhVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ApiProfileSection_root__21o-V\",\"title\":\"ApiProfileSection_title__1x4K7\",\"subtitle\":\"ApiProfileSection_subtitle__1F6yt\",\"row\":\"ApiProfileSection_row__3Smhx\",\"key\":\"ApiProfileSection_key__29IAz\",\"checkWrapper\":\"ApiProfileSection_checkWrapper__1KtQy\",\"ghost\":\"ApiProfileSection_ghost__1j8Ci\",\"ghostSecondary\":\"ApiProfileSection_ghostSecondary__1VGAq\",\"copied\":\"ApiProfileSection_copied__3vj24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavBar_root__17Fxz\",\"menu\":\"NavBar_menu__2DAUx\",\"notifications\":\"NavBar_notifications__2NYfH\",\"avatar\":\"NavBar_avatar__fhirX\",\"title\":\"NavBar_title__1KXPo\",\"links\":\"NavBar_links__2uShj\",\"actions\":\"NavBar_actions__2rLfr\",\"popUnder\":\"NavBar_popUnder__2nuIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideNavigator_root__3qMsO\",\"side\":\"SideNavigator_side__12umE\",\"link\":\"SideNavigator_link__HzTn0\",\"disabled\":\"SideNavigator_disabled__1sYGb\",\"active\":\"SideNavigator_active__3HDNv\",\"content\":\"SideNavigator_content__2VWMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LogInScreenForm_root__1WtTA\",\"email\":\"LogInScreenForm_email__3BWN7\",\"password\":\"LogInScreenForm_password__2NT2x\",\"error\":\"LogInScreenForm_error__1Oz4b\",\"signUp\":\"LogInScreenForm_signUp__l38UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ScienceBackground_root__rP4YR\",\"underlay\":\"ScienceBackground_underlay__2DaMQ\",\"image\":\"ScienceBackground_image__fmID9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PopUnder_root__18sY5\",\"popUnder\":\"PopUnder_popUnder__26qp2\",\"background\":\"PopUnder_background__1AaJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LatestNotificationsList_root__1QFgU\",\"list\":\"LatestNotificationsList_list__1s_4K\",\"seeAll\":\"LatestNotificationsList_seeAll__26M5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LogInScreen_root__wucdi\",\"formContainer\":\"LogInScreen_formContainer__16qrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ScreenWrapper_root__25_iQ\",\"navBar\":\"ScreenWrapper_navBar__2Tmmt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Badge_root__1pdba\",\"badge\":\"Badge_badge__1xUSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__17VTV\"};","import {TypedUseSelectorHook, useSelector, useDispatch} from \"react-redux\";\r\nimport type {RootState, AppDispatch} from \"../store\";\r\n\r\n/** Typed version of react-redux's useSelector() */\r\nexport const useStoreSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n/** Typed version of react-redux's useDispatch() */\r\nexport const useStoreDispatch = () => useDispatch<AppDispatch>();\r\n","import {useStoreSelector} from \"./useStore\";\r\n\r\n/**\r\n * Get the logged in user\r\n * @param {boolean} [expected=false] If false, the result can be undefined.\r\n */\r\nexport default function useUser<\r\n    Expected extends true|false|undefined,\r\n    Alternative = User|(Expected extends true ? never : undefined)\r\n>(expected?: Expected): User|Alternative {\r\n    return useStoreSelector(state => state.user.current) as User|Alternative;\r\n}\r\n","import React from 'react';\r\nimport {Route, RouteProps, Redirect, RedirectProps} from \"react-router-dom\";\r\nimport useUser from \"../hooks/useUser\";\r\n\r\nexport type AuthenticatedRouteProps = Omit<RouteProps, 'render'> & {\r\n    redirectTo: RedirectProps['to'],\r\n    pushRedirect?: RedirectProps['push'],\r\n};\r\n\r\n/** If the user isn't logged in, redirect. */\r\nexport function AuthenticatedRoute({\r\n    component,\r\n    children,\r\n    redirectTo,\r\n    pushRedirect,\r\n    ...props\r\n}: AuthenticatedRouteProps) {\r\n    const user = useUser();\r\n    return <Route {...props}>{\r\n        user ? (children || component) : <Redirect to={redirectTo} push={pushRedirect} />\r\n    }</Route>;\r\n}\r\nexport default AuthenticatedRoute;\r\n","import type {CSSProperties} from \"react\";\r\n\r\n/** Combine styles */\r\nexport function styles(...styles: Array<CSSProperties|undefined|null|false>): CSSProperties {\r\n    return Object.assign({}, ...styles);\r\n}\r\n\r\n/** Combine class names */\r\nexport function classNames(...classNames: Array<string|undefined|null|false>): string {\r\n    return classNames.filter(Boolean).join(' ');\r\n}\r\n","import React, {CSSProperties} from \"react\";\r\nimport css from './ScienceBackground/ScienceBackground.module.css';\r\nimport {classNames, styles} from \"../../utils/component-utils\";\r\n\r\nexport interface ScienceBackgroundProps {\r\n    className?: string;\r\n    style?: CSSProperties;\r\n}\r\n\r\nexport default function ScienceBackground({\r\n    className = '',\r\n    style,\r\n}: ScienceBackgroundProps) {\r\n    return <div\r\n        className={classNames(css.root, className)}\r\n        style={styles(defaultScienceBackgroundStyle, style)}\r\n    >\r\n        <div className={css.underlay} />\r\n        <img className={css.image} src=\"/science-background-image.jpg\" alt=\"science background\" />\r\n    </div>\r\n}\r\n\r\nexport const ScienceBackgroundAspectRatio = 1440 / 1028;\r\nexport const defaultScienceBackgroundStyle = Object.freeze({\r\n    height: '100vh',\r\n    width: Math.floor(100 / ScienceBackgroundAspectRatio) + 'vh',\r\n});\r\n","import React, {CSSProperties, FormHTMLAttributes, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport css from \"./LogInScreenForm.module.scss\";\r\nimport {classNames} from \"../../utils/component-utils\";\r\n\r\nexport interface LogInFormProps {\r\n    onSubmit: (email: string, password: string) => void;\r\n    error?: string;\r\n    disabled?: boolean;\r\n\r\n    className?: string;\r\n    style?: CSSProperties;\r\n}\r\n\r\nexport function LogInForm(props: LogInFormProps) {\r\n    const {disabled} = props;\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit: FormHTMLAttributes<HTMLFormElement>['onSubmit'] = async (event) => {\r\n        event.preventDefault();\r\n        if (!props.disabled) props.onSubmit(email, password);\r\n    };\r\n\r\n    return <form\r\n        className={classNames(css.root, props.className)}\r\n        style={props.style}\r\n        onSubmit={handleSubmit}\r\n    >\r\n\r\n        <label className={css.email}>\r\n            <span>Email</span>\r\n            <input\r\n                type=\"email\"\r\n                required\r\n                disabled={disabled}\r\n                value={email}\r\n                onChange={event => setEmail(event.target.value)}\r\n                placeholder=\"ramona@example.com\"\r\n            />\r\n        </label>\r\n\r\n        <label className={css.password}>\r\n            <span>Password</span>\r\n            <input\r\n                type=\"password\"\r\n                required\r\n                disabled={disabled}\r\n                value={password}\r\n                onChange={event => setPassword(event.target.value)}\r\n                placeholder=\"•••••••••••••••\"\r\n            />\r\n        </label>\r\n\r\n        {props.error ? <p className={css.error}>{props.error}</p> : null}\r\n\r\n        <input disabled={disabled} type=\"submit\" value=\"Log in\" />\r\n\r\n        <p className={css.signUp}>Don’t have an account yet? <Link to=\"/sign-up\">Sign up</Link></p>\r\n\r\n    </form>;\r\n}\r\n\r\nexport default LogInForm;\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\ninterface UserState {\r\n    current?: User;\r\n    signingIn: boolean;\r\n    signingInAs?: SignInPayload;\r\n    signInError?: string;\r\n    signingOut: boolean;\r\n    signOutError?: string;\r\n}\r\nconst initialState: UserState = {\r\n    current: undefined,\r\n    signingIn: false,\r\n    signingOut: false,\r\n};\r\n\r\nexport interface SignInPayload {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport default createSlice({\r\n    name: 'user',\r\n    initialState,\r\n\r\n    reducers: {\r\n\r\n        signIn: (state, action: PayloadAction<SignInPayload>) => {\r\n            state.signingIn = true;\r\n            state.signingInAs = action.payload;\r\n            state.signInError = undefined;\r\n        },\r\n        signInError: (state, action: PayloadAction<string>) => {\r\n            state.signingIn = false;\r\n            state.signingInAs = undefined;\r\n            state.signInError = action.payload;\r\n        },\r\n\r\n        signOut: (state) => {\r\n            state.signingOut = true;\r\n            state.signOutError = undefined;\r\n        },\r\n        signOutError: (state, action: PayloadAction<string>) => {\r\n            state.signingOut = false;\r\n            state.signOutError = action.payload;\r\n        },\r\n\r\n        setUser: (state, action: PayloadAction<User|undefined>) => {\r\n            state.current = action.payload || undefined;\r\n            state.signingIn = false;\r\n            state.signingInAs = undefined;\r\n            state.signingOut = false;\r\n        },\r\n\r\n    },\r\n\r\n});\r\n","import slice from \"./user-slice\";\r\n\r\nexport type {\r\n    SignInPayload\r\n} from \"./user-slice\";\r\n\r\nexport const {\r\n    signIn, signInError,\r\n    signOut, signOutError,\r\n    setUser\r\n} = slice.actions;\r\n","import React, {useEffect} from \"react\";\r\nimport {RouteChildrenProps} from \"react-router-dom\";\r\nimport css from \"./LogInScreen/LogInScreen.module.scss\";\r\nimport ScienceBackground, {defaultScienceBackgroundStyle} from \"../components/decoration/ScienceBackground\";\r\nimport LogInForm, {LogInFormProps} from \"./LogInScreen/LogInForm\";\r\n\r\nimport {useStoreDispatch, useStoreSelector} from \"../hooks/useStore\";\r\nimport {signIn} from \"../store/user/user-actions\";\r\n\r\nexport interface LogInScreenProps extends RouteChildrenProps {}\r\n\r\nexport function LogInScreen(props: LogInScreenProps) {\r\n    const dispatch = useStoreDispatch();\r\n    const state = useStoreSelector(state => state.user);\r\n\r\n    const signedIn = !!state.current;\r\n    const processing = state.signingIn;\r\n    const error = state.signInError;\r\n\r\n    const handleSubmit: LogInFormProps['onSubmit'] = async (email, password) => {\r\n        dispatch(signIn({email, password}));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (signedIn) props.history.push(\"/\");\r\n    }, [signedIn, props.history]);\r\n\r\n    return <div className={css.root}>\r\n        <div className={css.formContainer}>\r\n            <div>\r\n                <h1>Log in</h1>\r\n                <LogInForm\r\n                    onSubmit={handleSubmit}\r\n                    error={error}\r\n                    disabled={processing}\r\n                />\r\n            </div>\r\n        </div>\r\n        <ScienceBackground style={{ minWidth: defaultScienceBackgroundStyle.width }} />\r\n    </div>;\r\n}\r\nexport default LogInScreen;\r\n","import React, {CSSProperties, memo} from \"react\";\r\nimport {RouteComponentProps, withRouter, Link, LinkProps, RouteProps, Switch, Route} from \"react-router-dom\";\r\nimport css from \"./SideNavigator/SideNavigator.module.scss\";\r\nimport {classNames} from \"../utils/component-utils\";\r\n\r\nexport interface SideNavigatorProps extends RouteComponentProps {\r\n    links: SideNavigatorLink[];\r\n    className?: string;\r\n    style?: CSSProperties;\r\n}\r\nexport interface SideNavigatorLink extends Omit<RouteProps, 'children'|'path'|'component'>{\r\n    path: string; // Ensure string, to be used as a key and match LinkProps['to']\r\n    title: string;\r\n    replace?: LinkProps['replace'];\r\n    component: RouteProps['component'] | undefined | null; // Allow to be disabled\r\n}\r\n\r\n/**\r\n * Add a sidebar navigator which renders the Links and Routes.\r\n */\r\nexport function RawSideNavigator(props: SideNavigatorProps) {\r\n    const fullPath = props.location.pathname;\r\n\r\n    return <div className={classNames(css.root, props.className)} style={props.style}>\r\n\r\n        <nav className={css.side}>{\r\n            props.links.map(link => {\r\n                if (!link.component) {\r\n                    return <div key={link.path} className={css.link+\" \"+css.disabled}>{link.title}</div>;\r\n                }\r\n                return <Link key={link.path} to={props.match?.url + link.path}>\r\n                    <div\r\n                        className={classNames(\r\n                            css.link,\r\n                            props.match?.url + link.path === fullPath ? css.active : null\r\n                        )}\r\n                    >\r\n                        {link.title}\r\n                    </div>\r\n                </Link>\r\n            })\r\n        }</nav>\r\n\r\n        <div className={css.content}>\r\n            <Switch>\r\n                {\r\n                    props.links.map(({\r\n                        title,\r\n                        replace,\r\n                        path,\r\n                        component,\r\n                        ...routeProps\r\n                    }) => component ? <Route\r\n                        key={path}\r\n                        path={props.match?.path + path}\r\n                        component={component}\r\n                        {...routeProps}\r\n                    /> : null)\r\n                }\r\n                <Route path=\"*\">\r\n                    <p>Section not found</p>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n\r\n    </div>;\r\n}\r\n\r\nexport const SideNavigator = memo(withRouter(RawSideNavigator));\r\nSideNavigator.displayName = \"SideNavigator\";\r\nexport default SideNavigator;","import React, {useState, useCallback, InputHTMLAttributes} from \"react\";\r\nimport css from \"./GeneralProfileSection.module.scss\";\r\nimport useUser from \"../../../hooks/useUser\";\r\n\r\ntype OnInputChange = Exclude<InputHTMLAttributes<HTMLInputElement>['onChange'], undefined>;\r\n\r\nexport interface GeneralProfileSectionProps {}\r\n\r\nexport function GeneralProfileSection(props: GeneralProfileSectionProps) {\r\n    const currentUser = useUser(true);\r\n    const [user, setUser] = useState({...currentUser});\r\n\r\n    const changed = JSON.stringify(currentUser) !== JSON.stringify(user);\r\n\r\n    let submitDisabled = \"\";\r\n    if (!changed) {\r\n        submitDisabled = \"No changes made.\";\r\n    }\r\n\r\n    const handleFirstName = useCallback<OnInputChange>(event => {\r\n        setUser({...user, givenName: event.target.value});\r\n    }, [user, setUser])\r\n    const handleLastName = useCallback<OnInputChange>(event => {\r\n        setUser({...user, familyName: event.target.value});\r\n    }, [user, setUser]);\r\n    const handleEmail = useCallback<OnInputChange>(event => {\r\n        setUser({...user, email: event.target.value});\r\n    }, [user, setUser]);\r\n    const handlePhone = useCallback<OnInputChange>(event => {\r\n        setUser({...user, phone: event.target.value});\r\n    }, [user, setUser]);\r\n\r\n    return <section className={css.root}>\r\n        <h2 className={css.title}>General</h2>\r\n        <p className={css.subtitle}>Click field boxes to edit and then save your changes.</p>\r\n\r\n        <div className={css.row}>\r\n\r\n            <label className={css.avatar}>\r\n                Avatar\r\n                <div>\r\n                    <img src={user.avatar} alt=\"avatar\" />\r\n                    <button>Upload</button>\r\n                    <button className={css.secondary}>Remove</button>\r\n                </div>\r\n            </label>\r\n\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className={css.row}>\r\n\r\n            <label>\r\n                First name\r\n                <input required value={user.givenName} onChange={handleFirstName} />\r\n            </label>\r\n            <label>\r\n                Last name\r\n                <input required value={user.familyName} onChange={handleLastName} />\r\n            </label>\r\n\r\n        </div>\r\n        <div className={css.row}>\r\n\r\n            <label>\r\n                Email\r\n                <input required type=\"email\" value={user.email} onChange={handleEmail} />\r\n            </label>\r\n            <label>\r\n                Phone number\r\n                <input required type=\"phone\" value={user.phone} onChange={handlePhone} />\r\n            </label>\r\n\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className={css.row}>\r\n            <label className={css.delete}>\r\n                Delete account\r\n                <div>\r\n                    <span>By deleting your account you will lose all of your data.</span>\r\n                    <button disabled>Delete account...</button>\r\n                </div>\r\n            </label>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <input className={css.submit} disabled={!!submitDisabled} type=\"submit\" value=\"Save Changes\" title={submitDisabled||undefined} />\r\n\r\n    </section>;\r\n}\r\nexport default GeneralProfileSection;\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport css from \"./ApiProfileSection.module.scss\";\r\nimport useUser from \"../../../hooks/useUser\";\r\n\r\nexport interface ApiProfileSectionProps {}\r\n\r\nexport function ApiProfileSection(props: ApiProfileSectionProps) {\r\n    const keyInput = useRef<HTMLInputElement>(null);\r\n    const [copied, setCopied] = useState(false);\r\n    const currentUser = useUser(true);\r\n\r\n    const token = currentUser.token;\r\n\r\n    const handleCopyKey = () => {\r\n        if (keyInput.current) {\r\n            keyInput.current.select();\r\n            document.execCommand(\"copy\");\r\n            document.getSelection()?.empty();\r\n            keyInput.current.blur();\r\n            setCopied(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (copied) {\r\n            const timeoutId = setTimeout(() => setCopied(false), 3000);\r\n            return () => clearTimeout(timeoutId);\r\n        }\r\n    }, [copied, setCopied]);\r\n\r\n    return <section className={css.root}>\r\n        <h2 className={css.title}>Access token</h2>\r\n        <p className={css.subtitle}>Generate your unique key to access Galactic Data™.</p>\r\n\r\n        <div className={css.row}>\r\n            <label className={css.key}>\r\n                Your unique key\r\n                <div className={token ? css.checkWrapper : undefined}>\r\n                    <input\r\n                        ref={keyInput}\r\n                        value={token}\r\n                        readOnly\r\n                        disabled={!token}\r\n                    />\r\n                </div>\r\n            </label>\r\n        </div>\r\n\r\n        <div className={css.row}>{\r\n            token ?\r\n            <>\r\n                <button className={css.ghost} onClick={handleCopyKey}>\r\n                    <img src=\"/copy-icon.svg\" alt=\"copy\" /> Copy to clipboard\r\n                </button>\r\n                <button className={css.ghostSecondary}>Generate another</button>\r\n            </> :\r\n            <button>Generate key</button>\r\n        }</div>\r\n\r\n        {copied ? <p className={css.copied}>Copied!</p> : null}\r\n\r\n    </section>;\r\n}\r\nexport default ApiProfileSection;\r\n","import React, {CSSProperties} from \"react\";\r\n\r\nexport interface InnerGridIconProps {\r\n    style?: CSSProperties;\r\n    className?: string;\r\n    color?: string;\r\n}\r\n\r\n/**\r\n * Draws 9 squares in a 3x3 grid, evenly spaced.\r\n */\r\nexport function InnerGridIcon({\r\n    style,\r\n    className,\r\n    color = \"#000000\",\r\n}: InnerGridIconProps) {\r\n    const squareSize = 4;\r\n    const gap = 2;\r\n    const rounding = Math.min(squareSize, squareSize) / 5;\r\n    const totalSize = squareSize*3 + gap*2;\r\n\r\n    const offsetX = squareSize + gap;\r\n    const offsetY = squareSize + gap;\r\n\r\n    return <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width={totalSize}\r\n        height={totalSize}\r\n        style={style}\r\n        className={className}\r\n    >\r\n        <g>\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={0}         y={0} />\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={offsetX}   y={0} />\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={offsetX*2} y={0} />\r\n\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={0}         y={offsetY} />\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={offsetX}   y={offsetY} />\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={offsetX*2} y={offsetY} />\r\n\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={0}         y={offsetY*2} />\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={offsetX}   y={offsetY*2} />\r\n            <rect width={squareSize} height={squareSize} rx={rounding} fill={color} x={offsetX*2} y={offsetY*2} />\r\n        </g>\r\n    </svg>;\r\n}\r\nexport default InnerGridIcon;\r\n","/** Return a string from an unknown type */\r\nexport function errorMessage(error: unknown, fallback = \"An error occurred\"): string {\r\n    if (error) {\r\n        if (error instanceof Error) {\r\n            return error.message || error.name;\r\n        }\r\n        if (typeof error === \"string\") {\r\n            return error;\r\n        }\r\n    }\r\n    return fallback;\r\n}","import React, {CSSProperties} from \"react\";\r\nimport css from \"./Badge/Badge.module.scss\";\r\nimport {classNames} from \"../../utils/component-utils\";\r\n\r\nexport interface BadgeProps {\r\n    value: string|number;\r\n    hidden?: boolean;\r\n\r\n    className?: string;\r\n    style?: CSSProperties;\r\n    containerClassName?: string;\r\n    containerStyle?: CSSProperties;\r\n}\r\n\r\nexport function Badge(props: React.PropsWithChildren<BadgeProps>) {\r\n    return <div\r\n        className={classNames(css.root, props.containerClassName)}\r\n        style={props.containerStyle}\r\n    >\r\n        {props.children}\r\n        {props.hidden ? null : <div\r\n            className={classNames(css.badge, props.className)}\r\n            style={props.style}\r\n        >{props.value}</div>}\r\n    </div>\r\n}\r\nexport default Badge;\r\n","import {useStoreSelector} from \"./useStore\";\r\n\r\nexport default function useNotifications() {\r\n    return useStoreSelector(state => state.notifications);\r\n}\r\n","import React, {ComponentType, CSSProperties, PropsWithChildren} from \"react\";\r\nimport css from \"./PopUnder/PopUnder.module.scss\";\r\nimport {classNames} from \"../../utils/component-utils\";\r\n\r\nexport type PopUnderProps = PropsWithChildren<{\r\n    open: boolean;\r\n    content: ComponentType;\r\n    className?: string;\r\n    style?: CSSProperties;\r\n    containerClassName?: string;\r\n    containerStyle?: CSSProperties;\r\n    onClose: () => void;\r\n}>;\r\n\r\nexport default function PopUnder(props: PopUnderProps) {\r\n    return <div className={classNames(css.root, props.containerClassName)} style={props.containerStyle}>\r\n        {props.open ? <div className={css.background} onClick={props.onClose} /> : null}\r\n        {props.children}\r\n        {props.open ? <div className={classNames(css.popUnder, props.className)} style={props.style}>\r\n            {React.createElement(props.content)}\r\n        </div> : null}\r\n    </div>;\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport useNotifications from \"../../../hooks/useNotifications\";\r\nimport css from \"./LatestNotificationsList.module.scss\";\r\nimport {errorMessage} from \"../../../utils/error-utils\";\r\nimport Badge from \"../../ui/Badge\";\r\n\r\nexport function LatestNotificationsList() {\r\n    const {\r\n        latest,\r\n        fetchingLatest,\r\n        fetchLatestError,\r\n    } = useNotifications();\r\n\r\n    return <div className={css.root}>\r\n\r\n        <ul className={css.list}>\r\n            {latest.map(notification => <Link key={notification.id} to={`/notifications/${notification.id}`}>\r\n                <Badge value=\"Unread\" hidden={notification.read}>\r\n                    <li>{notification.title}</li>\r\n                </Badge>\r\n            </Link>)}\r\n            {latest.length === 0 && !fetchingLatest ? <li>No notifications</li> : null}\r\n        </ul>\r\n        {fetchingLatest ? <p>Loading...</p> : null}\r\n        {fetchLatestError ? <p>{errorMessage(fetchLatestError)}</p> : null}\r\n\r\n        <Link to={`/notifications`}>\r\n            <div className={css.seeAll}>See all</div>\r\n        </Link>\r\n    </div>;\r\n}\r\nexport default LatestNotificationsList;\r\n","import React, {CSSProperties, memo, useEffect, useState} from \"react\";\r\nimport {Link, withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport css from \"./NavBar/NavBar.module.scss\";\r\nimport {classNames} from \"../../utils/component-utils\";\r\nimport InnerGridIcon from \"../icons/InnerGridIcon\";\r\nimport useUser from \"../../hooks/useUser\";\r\nimport {errorMessage} from \"../../utils/error-utils\";\r\nimport Badge from \"../ui/Badge\";\r\nimport {useStoreDispatch, useStoreSelector} from \"../../hooks/useStore\";\r\nimport {signOut} from \"../../store/user/user-actions\";\r\nimport useNotifications from \"../../hooks/useNotifications\";\r\nimport PopUnder from \"../ui/PopUnder\";\r\nimport LatestNotificationsList from \"./NavBar/LatestNotificationsList\";\r\n\r\nexport interface NavBarProps extends RouteComponentProps {\r\n    className?: string;\r\n    style?: CSSProperties;\r\n}\r\n\r\nconst links = Object.freeze([\r\n    {title: \"Home\", to: \"/\"},\r\n    {title: \"Categories\", to: \"/categories\"},\r\n    {title: \"Feed\", to: \"/feed\"},\r\n    {title: \"Saved\", to: \"/saved\"},\r\n]);\r\n\r\nexport function RawNavBar(props: NavBarProps) {\r\n    const user = useUser();\r\n    const notifications = useNotifications();\r\n    const unreadCount = notifications.latest.filter(n => !n.read).length;\r\n\r\n    const dispatch = useStoreDispatch();\r\n    const {signingOut, signInError} = useStoreSelector(state => state.user);\r\n\r\n    const [openNotifications, setOpenNotifications] = useState(false);\r\n    const handleToggleNotifications = () => setOpenNotifications(!openNotifications);\r\n\r\n    const handleLogOut = () => dispatch(signOut());\r\n    const disabled = signingOut;\r\n\r\n    useEffect(() => {\r\n        if (signInError) alert(errorMessage(signInError));\r\n    }, [signInError]);\r\n\r\n    return <nav className={classNames(css.root, props.className)} style={props.style}>\r\n\r\n        <div className={css.menu}><InnerGridIcon /></div>\r\n        <p className={css.title}>Galactic</p>\r\n\r\n        <div className={css.links}>\r\n            {\r\n                links.map(link => {\r\n                    if (disabled) return <span key={link.to}>{link.title}</span>;\r\n                    return <Link key={link.to} to={link.to}>{link.title}</Link>;\r\n                })\r\n            }\r\n            <span>•••</span>\r\n        </div>\r\n\r\n        <div className={css.actions}>\r\n            <PopUnder\r\n                open={openNotifications}\r\n                onClose={handleToggleNotifications}\r\n                content={LatestNotificationsList}\r\n                className={css.popUnder}\r\n            >\r\n                <Badge value={unreadCount} hidden={notifications.fetchingLatest}>\r\n                    <div className={css.notifications} onClick={handleToggleNotifications}>\r\n                        <img src=\"/bell.svg\" alt=\"Notifications\" />\r\n                    </div>\r\n                </Badge>\r\n            </PopUnder>\r\n            <img className={css.avatar} src={user?.avatar} alt=\"avatar\" />\r\n            <button onClick={handleLogOut} disabled={disabled}>Log out</button>\r\n        </div>\r\n\r\n    </nav>;\r\n}\r\n\r\nexport const NavBar = memo(withRouter(RawNavBar));\r\n\r\nNavBar.displayName = \"NavBar\";\r\nexport default NavBar;\r\n","import React, {PropsWithChildren} from \"react\";\r\nimport css from \"./ScreenWrapper.module.scss\";\r\nimport NavBar from \"../../components/navigation/NavBar\";\r\nimport {classNames} from \"../../utils/component-utils\";\r\n\r\nexport type ScreenWrapperProps = PropsWithChildren<{\r\n    className?: string;\r\n}>;\r\n\r\nexport function ScreenWrapper(props: ScreenWrapperProps) {\r\n    return <div className={classNames(css.root, props.className)}>\r\n        <NavBar className={css.navBar} />\r\n        {props.children}\r\n    </div>;\r\n}\r\nexport default ScreenWrapper;\r\n","import {RouteChildrenProps} from \"react-router-dom\";\r\nimport SideNavigator from \"../navigation/SideNavigator\";\r\nimport GeneralProfileSection from \"./ProfileScreen/sections/GeneralProfileSection\";\r\nimport ApiProfileSection from \"./ProfileScreen/sections/ApiProfileSection\";\r\nimport ScreenWrapper from \"./core/ScreenWrapper\";\r\n\r\nexport interface ProfileScreenProps extends RouteChildrenProps {}\r\n\r\nexport function ProfileScreen(props: ProfileScreenProps) {\r\n    return <ScreenWrapper>\r\n        <h1>Account settings</h1>\r\n        <SideNavigator links={[\r\n            {title: \"General\", path: '', exact: true, component: GeneralProfileSection},\r\n            {title: \"Plan\", path: '/plan', component: null},\r\n            {title: \"API\", path: '/api', component: ApiProfileSection},\r\n            {title: \"Security\", path: '/security', component: null},\r\n            {title: \"Notifications\", path: '/notifications', component: null},\r\n            {title: \"Billing History\", path: '/billing-history', component: null},\r\n            {title: \"Legal\", path: '/legal', component: null},\r\n        ]} />\r\n    </ScreenWrapper>;\r\n}\r\nexport default ProfileScreen;\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\ninterface NotificationsState {\r\n    latest: UserNotification[];\r\n    fetchingLatest: boolean;\r\n    fetchLatestError?: string;\r\n}\r\nconst initialState: NotificationsState = {\r\n    latest: [],\r\n    fetchingLatest: false,\r\n};\r\n\r\nexport default createSlice({\r\n    name: 'notifications',\r\n    initialState,\r\n\r\n    reducers: {\r\n\r\n        fetchLatest: (state) => {\r\n            state.fetchingLatest = true;\r\n            state.fetchLatestError = undefined;\r\n        },\r\n        fetchLatestError: (state, action: PayloadAction<string>) => {\r\n            state.fetchingLatest = false;\r\n            state.fetchLatestError = action.payload;\r\n        },\r\n\r\n        setLatest: (state, action: PayloadAction<UserNotification[]>) => {\r\n            state.latest = [...action.payload];\r\n            state.fetchingLatest = false;\r\n            state.fetchLatestError = undefined;\r\n        },\r\n\r\n    },\r\n\r\n});\r\n","import slice from \"./notifications-slice\";\r\n\r\nexport const {\r\n    fetchLatest, fetchLatestError, setLatest,\r\n} = slice.actions;\r\n","import {RouteChildrenProps} from \"react-router-dom\";\r\nimport ScreenWrapper from \"./core/ScreenWrapper\";\r\n\r\nexport interface NotificationsScreenProps extends RouteChildrenProps<{\r\n    id?: string;\r\n}>{}\r\n\r\nexport function NotificationsScreen(props: NotificationsScreenProps) {\r\n    return <ScreenWrapper>\r\n        <h1>Notifications</h1>\r\n        <h2>{props.match?.params.id}</h2>\r\n    </ScreenWrapper>;\r\n}\r\nexport default NotificationsScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport css from './App.module.scss';\r\n\r\nimport AuthenticatedRoute from \"./navigation/AuthenticatedRoute\";\r\nimport LogInScreen from \"./screens/LogInScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n\r\nimport {useStoreDispatch} from \"./hooks/useStore\";\r\nimport {fetchLatest as fetchLatestNotifications} from \"./store/notifications/notifications-actions\";\r\nimport useUser from \"./hooks/useUser\";\r\nimport NotificationsScreen from \"./screens/NotificationsScreen\";\r\n\r\nfunction App() {\r\n    const user = useUser();\r\n    const dispatch = useStoreDispatch();\r\n\r\n    const userId = user?.email;\r\n    useEffect(() => {\r\n        if (userId) dispatch(fetchLatestNotifications());\r\n    }, [userId, dispatch]);\r\n\r\n    return <div className={css.root}>\r\n        <Switch>\r\n\r\n            <Redirect exact from=\"/\" to=\"/profile\" />\r\n            <Route path=\"/login\" component={LogInScreen} />\r\n            <AuthenticatedRoute redirectTo=\"/login\" path=\"/profile\" component={ProfileScreen}/>\r\n            <AuthenticatedRoute redirectTo=\"/login\" path=\"/notifications/:id?\" component={NotificationsScreen} />\r\n\r\n            <Route path=\"*\">\r\n                <h1>404</h1>\r\n                <p>Page not found</p>\r\n            </Route>\r\n\r\n        </Switch>\r\n    </div>;\r\n}\r\n\r\nexport default App;\r\n","import {call, put, takeLatest, getContext} from 'redux-saga/effects';\r\nimport type {PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nimport {signIn, SignInPayload, signInError, signOut, signOutError, setUser} from \"./user-actions\";\r\nimport type {SagaContext} from \"../sagaContexts\";\r\nimport {errorMessage} from \"../../utils/error-utils\";\r\n\r\nfunction* signInWorker(action: PayloadAction<SignInPayload>) {\r\n    try {\r\n        const api: SagaContext<\"auth\"> = yield getContext(\"auth\");\r\n\r\n        // @ts-ignore\r\n        const user: any = yield call(\r\n            [api, api.signIn],\r\n            action.payload.email, action.payload.password\r\n        );\r\n\r\n        yield put(setUser(user));\r\n    } catch (e) {\r\n        yield put(signInError(errorMessage(e)));\r\n    }\r\n}\r\nfunction* signOutWorker() {\r\n    try {\r\n        const api: SagaContext<\"auth\"> = yield getContext(\"auth\");\r\n\r\n        // @ts-ignore\r\n        yield call([api, api.signOut]);\r\n\r\n        yield put(setUser(undefined));\r\n    } catch (e) {\r\n        yield put(signOutError(e));\r\n    }\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield takeLatest(signIn.type, signInWorker);\r\n    yield takeLatest(signOut.type, signOutWorker);\r\n}\r\n","import {call, put, takeLatest, getContext} from 'redux-saga/effects';\r\n\r\nimport {fetchLatest, fetchLatestError, setLatest} from \"./notifications-actions\";\r\nimport type {SagaContext} from \"../sagaContexts\";\r\nimport {errorMessage} from \"../../utils/error-utils\";\r\n\r\nfunction* fetchLatestWorker() {\r\n    try {\r\n        const api: SagaContext<\"notifications\"> = yield getContext(\"notifications\");\r\n\r\n        // @ts-ignore\r\n        const notifications: any = yield call([api, api.fetchLatest]);\r\n\r\n        yield put(setLatest(notifications));\r\n    } catch (e) {\r\n        yield put(fetchLatestError(errorMessage(e)));\r\n    }\r\n}\r\n\r\nexport default function* notificationsSaga() {\r\n    yield takeLatest(fetchLatest.type, fetchLatestWorker);\r\n}\r\n","import {all, fork} from 'redux-saga/effects';\r\nimport user from \"./user/user-saga\";\r\nimport notifications from \"./notifications/notifications-saga\";\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        fork(user),\r\n        fork(notifications),\r\n    ]);\r\n}\r\nexport default rootSaga;\r\n","export function wait(ms: number) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n\r\nexport function createUser(email: string): User {\r\n    return {\r\n        email,\r\n        givenName: email.split('@')[0] || '',\r\n        familyName: email.split('@')[1] || '',\r\n        token: Math.random().toString().split('.').pop() || '',\r\n        avatar: \"/avatar.jpg\",\r\n        phone: Math.random().toString().split('.')[1].slice(0, 10),\r\n    };\r\n}\r\n\r\nlet articleCount = 0;\r\nexport function createArticle(id: number): Article {\r\n    const count = articleCount++;\r\n    return {\r\n        id,\r\n        published: new Date(2020, 0, 1, 0, 0, 0, count).toISOString(),\r\n        title: `Article ${id}`,\r\n        snippet: `Snippet of article ${id}`,\r\n    };\r\n}\r\n\r\nlet notificationCount = 0;\r\nexport function createNotification(id: string): UserNotification {\r\n    const count = notificationCount++;\r\n    return {\r\n        id,\r\n        title: `Notification ${id}`,\r\n        message: `Message for notification ${id}`,\r\n        timeStamp: new Date(2020, 0, 1, 0, 0, 0, count).toISOString(),\r\n        read: count % 2 === 0\r\n    };\r\n}\r\n","import {wait, createUser} from \"../../utils/mock-utils\";\r\nimport type {AuthService} from \"../AuthService\";\r\n\r\nexport interface MockVolatileAuthOptions {\r\n    fetchUserDelay: number;\r\n    signInDelay: number;\r\n    signOutDelay: number;\r\n    signUpDelay: number;\r\n}\r\n\r\n/** A mock auth service that doesn't persist the user. */\r\nexport default class MockVolatileAuth implements AuthService {\r\n    public currentUser?: User;\r\n\r\n    private options: MockVolatileAuthOptions = {\r\n        fetchUserDelay: 300,\r\n        signInDelay: 500,\r\n        signOutDelay: 500,\r\n        signUpDelay: 100,\r\n    }\r\n\r\n    constructor(options?: Partial<MockVolatileAuthOptions>) {\r\n        Object.assign(this.options, options);\r\n    }\r\n\r\n    async fetchUser() {\r\n        await wait(this.options.fetchUserDelay);\r\n        return this.currentUser || null;\r\n    }\r\n\r\n    async signIn(email: string, password: string) {\r\n        await wait(this.options.signInDelay);\r\n        if (!password) throw new Error(\"Failed to sign in\");\r\n        return this.currentUser = createUser(email);\r\n    }\r\n\r\n    async signOut(): Promise<boolean> {\r\n        this.currentUser = undefined;\r\n        await wait(this.options.signOutDelay);\r\n        return true;\r\n    }\r\n\r\n    async signUp(email: string, password: string): Promise<User> {\r\n        await wait(this.options.signUpDelay);\r\n        if (!password) throw new Error(\"Failed to sign up\");\r\n        return this.currentUser = createUser(email);\r\n    }\r\n\r\n}\r\n","import type {NotificationsService, NotificationFilters} from \"../NotificationsService\";\r\n\r\nexport interface NotificationsApiOptions {\r\n    endpoint: string;\r\n    latestLength: number;\r\n}\r\n\r\nexport default class NotificationsApi implements NotificationsService {\r\n    private options: NotificationsApiOptions = {\r\n        endpoint: \"https://mockend.com/biorelate/fe-mock-api/notification\",\r\n        latestLength: 10,\r\n    };\r\n\r\n    constructor(options?: Partial<NotificationsApiOptions>) {\r\n        Object.assign(this.options, options);\r\n    }\r\n\r\n    async fetchNotifications(offset: number, limit: number, filters?: NotificationFilters): Promise<UserNotification[]> {\r\n        let url = this.options.endpoint + `?offset=${offset}&limit=${limit}`;\r\n        if (filters?.order !== undefined) url += \"&timestamp_order=\" + filters.order;\r\n        if (filters?.read !== undefined) url += \"&read_eq=\" + (filters.read ? \"true\" : \"false\");\r\n\r\n        return fetch(url).then(response => response.json());\r\n    }\r\n\r\n    fetchLatest() {\r\n        return this.fetchNotifications(0, this.options.latestLength, {\r\n            order: \"desc\", read: true,\r\n        });\r\n    }\r\n\r\n}\r\n","import MockVolatileAuth from \"../services/auth/MockVolatileAuth\";\r\n// import Auth0Api from \"../services/auth/Auth0Api\";\r\n// import MockNotificationsApi from \"../services/notifications/MockNotificationsApi\";\r\nimport NotificationsApi from \"../services/notifications/NotificationsApi\";\r\n\r\nexport const sagaContexts = {\r\n    // auth: window.location.origin === \"http://localhost:8080\" ? new Auth0Api({}) : new MockVolatileAuth({}), // TODO Re-enable if/when Auth0 is working\r\n    auth: new MockVolatileAuth({}),\r\n    notifications: new NotificationsApi({}),\r\n};\r\nexport default sagaContexts;\r\n\r\nexport type SagaContextKey = keyof typeof sagaContexts;\r\nexport type SagaContext<key extends SagaContextKey> = typeof sagaContexts[key];\r\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from \"./sagas\";\r\nimport sagaContexts from \"./sagaContexts\";\r\n\r\nimport user from './user/user-slice';\r\nimport notifications from './notifications/notifications-slice';\r\n\r\nconst sagaMiddleware = createSagaMiddleware({ context: sagaContexts });\r\n\r\nexport const index = configureStore({\r\n    reducer: {\r\n        user: user.reducer,\r\n        notifications: notifications.reducer,\r\n    },\r\n    middleware: [\r\n        ...getDefaultMiddleware(),\r\n        sagaMiddleware,\r\n    ],\r\n    devTools: true,\r\n});\r\nexport default index;\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof index.getState>;\r\nexport type AppDispatch = typeof index.dispatch;\r\n","import React from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider as ReduxProvider} from 'react-redux'\r\n\r\nimport store from \"./store\";\r\n\r\nexport function AppWrapper(props: React.PropsWithChildren<{}>) {\r\n    return <React.StrictMode>\r\n        <ReduxProvider store={store}>\r\n            <BrowserRouter>\r\n                {props.children}\r\n            </BrowserRouter>\r\n        </ReduxProvider>\r\n    </React.StrictMode>;\r\n}\r\n\r\nexport default AppWrapper;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport AppWrapper from './AppWrapper';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <AppWrapper>\r\n        <App />\r\n    </AppWrapper>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}